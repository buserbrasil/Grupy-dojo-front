{"version":3,"sources":["Components/Clock/index.js","Components/Form/index.js","Components/Queue/field.js","Components/Queue/queue.js","App.js","serviceWorker.js","index.js"],"names":["Clock","props","_this","Object","classCallCheck","this","_super","call","decrementCodingTurnTime","codingTurnTime","state","setState","resetCodingTurnTime","decrementCodingBreakTime","codingBreakTime","resetCodingBreakTime","incrementQueueTurn","queueTurn","incrementQueueCounter","queueCounter","resetQueueCounter","newCodingTurn","handleQueueShift","newQueueTurn","checkCodingTurn","highlightItem","decrementer","handleEndAudio","handleStartAudio","checkQueueTurn","queueLength","clearTimeout","timeoutPromise","checkEnd","totalSessions","endend","handleStartTimer","e","preventDefault","Audio","play","handlePausePlayClock","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","pauseFlag","wrap","_context","prev","next","nonStarted","stop","_x","apply","arguments","handleReset","_ref2","_callee2","_context2","objectSpread2","initialState","abrupt","_x2","workflow","_callee3","_context3","setTimeout","toMmSs","toConvertNumber","minutes","Math","floor","toString","seconds","length","concat","react_default","createElement","className","style","backgroundColor","color","onClick","handleRerenderForm","Component","Form","height","fontFamily","htmlFor","name","type","step","min","value","codingSeconds","onChange","handleCodingSecondsChange","breakSeconds","handleBreakSecondsChange","numberOfTurns","handleNumberOfTurns","handleShouldShuffle","checked","shouldShuffle","undefined","getFormData","Field","placeholder","handleQueueInput","onKeyPress","queueInput","handleQueueSubmit","Queue","rows","queue","_loop","i","push","key","formDone","aria-label","handleDeleteQueueItem","aria-hidden","overflowY","App","target","newQueue","toConsumableArray","actualFirst","shift","array","temporaryValue","randomIndex","currentIndex","random","shuffle","splice","renderForm","Form_Form","renderClock","Clock_Clock","parseInt","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1e20c9d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Clock extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      /* time order\n       session : total session number of queue turns\n       queueTurn  : actual queue turn\n       codingTurn : time to code\n       codingBreak : time to switch pilot \n       queue length : the queue total length\n       queue counter : used as condition to change queueTurn*/\n      totalSessions: this.props.totalSessions,\n      queueTurn: 0,\n      codingTurnTime: this.props.codingTurnTime,\n      codingBreakTime: this.props.codingBreakTime,\n      queueCounter: 0,\n      pauseFlag: true,\n      nonStarted: true,\n      endend: false,\n      highlightItem: 'codingTurnTime'\n    }\n    this.initialState = {...this.state};\n  }\n\n  decrementCodingTurnTime = () => {\n    let codingTurnTime = this.state.codingTurnTime;\n    this.setState({codingTurnTime: codingTurnTime - 1});\n  }\n\n  resetCodingTurnTime = () => {\n    this.setState({codingTurnTime: this.props.codingTurnTime});\n  }\n\n  decrementCodingBreakTime = () => {\n    let codingBreakTime = this.state.codingBreakTime;\n    this.setState({codingBreakTime: codingBreakTime - 1});\n  }\n\n  resetCodingBreakTime = () => {\n    this.setState({codingBreakTime: this.props.codingBreakTime});\n  }\n\n  incrementQueueTurn = () => {\n    let queueTurn = this.state.queueTurn\n    this.setState({queueTurn: queueTurn + 1});\n  }\n  \n  incrementQueueCounter = () => {\n    let queueCounter = this.state.queueCounter;\n    this.setState({queueCounter: queueCounter + 1});\n  }\n\n  resetQueueCounter = () => {\n    this.setState({queueCounter: 0});\n  }\n\n  \n  newCodingTurn = () => {\n    this.resetCodingTurnTime();\n    this.resetCodingBreakTime();\n    this.incrementQueueCounter();\n    this.props.handleQueueShift();\n  }\n\n  newQueueTurn = () => {\n    this.resetQueueCounter();\n    this.incrementQueueTurn();\n  }\n  \n  checkCodingTurn = () => {    \n    let codingTurnTime = this.state.codingTurnTime;\n    let codingBreakTime = this.state.codingBreakTime;\n    \n    if (codingTurnTime > 0) {\n      this.decrementCodingTurnTime();\n      this.setState({highlightItem: 'codingTurnTime'})\n      return this.decrementer();\n\n    }\n    else if (codingBreakTime > 0) {\n      if (\n        codingTurnTime === 0 &&\n        codingBreakTime === this.props.codingBreakTime\n      ) {\n        this.handleEndAudio();\n      }\n      this.decrementCodingBreakTime();\n      this.setState({highlightItem: 'codingBreakTime'})\n      return this.decrementer();\n    }\n    else {\n      this.handleStartAudio();\n      this.setState({highlightItem: 'codingTurnTime'})\n      this.newCodingTurn();\n      return this.decrementer();\n    }\n  }\n  \n  checkQueueTurn = () => {\n    let queueLength = this.props.queueLength;\n    let queueCounter = this.state.queueCounter;\n    \n    \n    if (queueCounter === queueLength) {\n      // stops previous decrementer since it will call a new\n      clearTimeout(this.state.timeoutPromise);\n      this.newQueueTurn();\n      return this.decrementer();\n    }\n  }\n  \n  checkEnd = () => {\n    let queueTurn = this.state.queueTurn;\n    let totalSessions = this.state.totalSessions;\n    \n    \n    if (queueTurn === totalSessions) {\n      // stops previous decrementer since it will call a new\n      clearTimeout(this.state.timeoutPromise);\n      this.setState({endend: true});\n    }\n  }\n\n  handleStartTimer = (e) => {\n    e.preventDefault();\n    this.decrementer();\n  }\n\n  handleStartAudio = () => {\n    let audio = new Audio(\n      'https://grupy-dojo.s3.us-east-2.amazonaws.com/round-start.mp3'\n    );\n    audio.play();\n  }\n\n  handleEndAudio = () => {\n    let audio = new Audio(\n      'https://grupy-dojo.s3.us-east-2.amazonaws.com/finish-him.mp3'\n    );\n    audio.play();\n  }\n\n  handlePausePlayClock = async (e) => {\n    e.preventDefault();\n    let pauseFlag = this.state.pauseFlag;\n    if (this.state.nonStarted) {\n      this.handleStartAudio();\n    }\n    await this.setState(\n      {pauseFlag: !pauseFlag, nonStarted: false}\n    );\n    if (pauseFlag) ; this.decrementer();\n  }\n\n  handleReset = async (e) => {\n    e.preventDefault();\n    await clearTimeout(this.state.timeoutPromise);\n    await this.setState({...this.initialState});\n    return;\n  }\n\n  workflow = async () => {\n    await this.checkCodingTurn();\n    await this.checkQueueTurn();\n    await this.checkEnd();\n  }\n\n  decrementer = () => {\n    let pauseFlag = this.state.pauseFlag;\n    let timeoutPromise;\n\n    if (pauseFlag && this.state.timeoutPromise) {\n      clearTimeout(this.state.timeoutPromise);\n      return ;\n    } else {\n      timeoutPromise = setTimeout(() => {\n        this.workflow();\n      }, 1000);\n      this.setState(\n        {timeoutPromise: timeoutPromise}\n      );\n    }\n  }\n\n  toMmSs = (toConvertNumber) => {\n    let minutes = Math.floor(toConvertNumber/60).toString();\n    let seconds = (toConvertNumber%60).toString();\n    if (minutes.length === 1) {\n      minutes = '0' + minutes;\n    }\n    if (seconds.length === 1) {\n      seconds = '0' + seconds\n    }\n    return `${minutes}:${seconds}`\n  }\n\n  render() {\n    return (\n      <div className=\"container my-2\">\n        <div>\n          <div className=\"my-2\">\n            <div className=\"card\" style={this.state.highlightItem === 'codingTurnTime' ? {backgroundColor: 'orange'} : {}}>\n              <h5 className=\"card-header text-center\">Codar!</h5>\n              <h3 className=\"card-body card-text text-center\">{this.toMmSs(this.state.codingTurnTime)}</h3>\n            </div>\n          </div>\n          <div className=\"my-2\">\n            <div className=\"card\" style={this.state.highlightItem === 'codingBreakTime' ? {backgroundColor: 'orange'} : {}}>\n              <h5 className=\"card-header text-center\">Trocar!</h5>\n              <h3 className=\"card-body card-text text-center\">{this.toMmSs(this.state.codingBreakTime)}</h3>\n            </div>\n          </div>\n          <div className=\"my-2\">\n            <div className=\"card\" style={\n              this.state.endend ?\n              {backgroundColor: 'red', color:'white'} :\n              {}\n            }>\n              <h5 className=\"card-header text-center\">Rodada</h5>\n              <h3 className=\"card-body card-text text-center\">{`${this.state.queueTurn}`}</h3>\n            </div>\n          </div>\n        </div>\n\n        {\n          this.state.endend ?\n          <div className=\"row d-flex justify-content-center\" style={{color: \"pink\"}}><h3>Partida finalizada!</h3></div> :\n          \"\"         \n        }\n\n        <div className=\"row d-flex justify-content-center\">\n          <button className=\"btn btn-secondary mx-2\" onClick={this.props.handleRerenderForm}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </button>\n          <button className=\"btn btn-primary mx-2\" onClick={this.handlePausePlayClock}>{\n            this.state.pauseFlag ? <i className=\"fas fa-play\"></i> : <i className=\"fas fa-pause\"></i>\n          }</button>\n          {\n            !this.state.nonStarted ?\n            <button className=\"btn btn-warning mx-2\" onClick={this.handleReset}>\n              <i className=\"fas fa-undo\"></i> Reiniciar\n            </button> :\n            \"\"\n          }\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\n\nexport default class Form extends Component {\n\n    render() {\n      return (\n        <div className=\"container d-flex flex-column align-items-center\" style={{height: '100%'}}>\n          <div className=\"bg-warning w-md-50 mx-auto my-auto p-5\">\n            <h1 className=\"mb-5 text-center\" style={{fontFamily: \"'Press Start 2P', cursive\"}}>GruPy Dojo!</h1>\n            <label\n              className=\"col-form-label-lg\"\n              htmlFor=\"codingSeconds\"\n              >Número de segundos para codar</label>\n            <input \n              name=\"codingSeconds\"\n              type=\"number\"\n              step={1}\n              min={30}\n              value={this.props.codingSeconds}\n              onChange={this.props.handleCodingSecondsChange}\n              className=\"form-control\"\n              />\n            <label \n              className=\"col-form-label-lg\" \n              htmlFor=\"breakSeconds\"\n              >Número de segundos para trocar de lugares</label>\n            <input \n              name=\"breakSeconds\"\n              type=\"number\"\n              step={1}\n              min={10}\n              value={this.props.breakSeconds}\n              onChange={this.props.handleBreakSecondsChange}\n              className=\"form-control\"\n              />\n            <label \n              className=\"col-form-label-lg\" \n              htmlFor=\"numberOfTurns\"\n              >Número de turnos</label>\n            <input \n              name=\"numberOfTurns\"\n              type=\"number\"\n              step={1}\n              min={1}\n              value={this.props.numberOfTurns}\n              onChange={this.props.handleNumberOfTurns}\n              className=\"form-control\"\n              />\n            <label \n              className=\"col-form-label-lg\" \n              htmlFor=\"shouldShuffle\"\n            >Embaralhar?</label>\n            <input\n              name=\"shouldShuffle\"\n              type=\"checkbox\"\n              onClick={this.props.handleShouldShuffle}\n              checked={this.props.shouldShuffle ? 'checked' : undefined}\n            />\n            <br/>\n            <button\n              onClick={this.props.getFormData}\n              className=\"btn btn-primary\"\n              >\n              Começar!\n            </button>\n          </div>\n        </div>\n      );\n    }\n}","import React from 'react';\n\nexport default function Field(props) {\n    return (\n        <div className=\"input-group mb-3\">\n            <input \n                className=\"form-control\"\n                placeholder=\"Nick do Participante\"\n                onChange={props.handleQueueInput}\n                onKeyPress={props.handleQueueInput}\n                value={props.queueInput}\n            />\n            <div className=\"input-group-append\">\n                <button className=\"btn btn-primary\" onClick={props.handleQueueSubmit}>\n                    +!\n                </button>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport default function Queue(props) {\n    let rows = [];\n    let queue = props.queue;\n    for (let i = 0; i < queue.length; i++) {\n        rows.push(\n            <li key={i} name={i} className=\"list-group-item\">\n                {props.formDone ? i+1 : undefined}{props.formDone ? \" - \" : undefined}{queue[i]}\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={\n                    () => {\n                        props.handleDeleteQueueItem(i)\n                    }\n                }>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </li>\n        );\n    }\n    return (\n        <div className=\"w-100\" style={{height: '500px', overflowY: 'auto'}}>\n            <ul className=\"list-group\">\n                {rows}\n            </ul>\n        </div>\n    )\n}","import React from \"react\";\nimport \"./App.css\";\n\nimport Clock from \"./Components/Clock/index.js\"\nimport Form from \"./Components/Form/index.js\"\nimport Field from \"./Components/Queue/field.js\"\nimport Queue from \"./Components/Queue/queue.js\"\n\nfunction shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      codingSeconds: '30',\n      breakSeconds: '10',\n      numberOfTurns: '1',\n      queueInput: '',\n      queue: [],\n      formDone: false,\n      shouldShuffle: true,\n    }\n  }\n\n  handleCodingSecondsChange = (e) => {\n    this.setState({codingSeconds: e.target.value});\n  }\n\n  handleBreakSecondsChange = (e) => {\n    this.setState({breakSeconds: e.target.value});\n  }\n\n  handleNumberOfTurns = (e) => {\n    this.setState({numberOfTurns: e.target.value});\n  }\n\n  handleQueueInput = (e) => {\n    if (e.key === 'Enter') {\n      this.handleQueueSubmit(e);\n      return;\n    }\n    this.setState({queueInput: e.target.value});\n  }\n\n  handleQueueSubmit = (e) => {\n    e.preventDefault();\n    let newQueue = [...this.state.queue];\n    if (this.state.queueInput !== \"\") {\n      newQueue.push(this.state.queueInput);\n    }\n    this.setState({queue: newQueue, queueInput: ''});\n  }\n\n  handleQueueShift = () => {\n    let newQueue = [...this.state.queue];\n    let actualFirst = newQueue.shift();\n    newQueue.push(actualFirst);\n    this.setState({queue: newQueue});\n  }\n\n  getFormData = (e) => {\n    e.preventDefault();\n    let queue = [...this.state.queue];\n    if (this.state.shouldShuffle) {\n      shuffle(queue);\n    }\n    this.setState({'formDone': true, 'queue': queue});\n  }\n\n  handleDeleteQueueItem = (i) => {\n    let queue = [...this.state.queue];\n    queue.splice(i, 1);\n    this.setState({'queue': queue});\n  }\n\n  handleRerenderForm = () => {\n    this.setState({'formDone': false});\n  }\n\n  handleShouldShuffle = (e) => {\n    this.setState({'shouldShuffle': !this.state.shouldShuffle})\n  }\n\n  renderForm = () => {\n    return <Form \n            codingSeconds={this.state.codingSeconds}\n            breakSeconds={this.state.breakSeconds}\n            numberOfTurns={this.state.numberOfTurns}\n            handleCodingSecondsChange={this.handleCodingSecondsChange}\n            handleBreakSecondsChange={this.handleBreakSecondsChange}\n            handleNumberOfTurns={this.handleNumberOfTurns}\n            getFormData={this.getFormData}\n            shouldShuffle={this.state.shouldShuffle}\n            handleShouldShuffle={this.handleShouldShuffle}\n          />\n  }\n\n  renderClock = () => {\n    return <Clock \n            totalSessions={parseInt(this.state.numberOfTurns)}  \n            codingTurnTime={parseInt(this.state.codingSeconds)}\n            codingBreakTime={parseInt(this.state.breakSeconds)}\n            queueLength={this.state.queue.length}\n            handleQueueShift={this.handleQueueShift}\n            handleRerenderForm={this.handleRerenderForm}\n          />;\n  }\n\n  render() {\n    return (\n      <div className=\"container d-flex align-items-center justify-content-center\" style={{height: '100%'}}>\n        <div className=\"row w-100\">\n          <div className=\"col-md-6\">\n            {\n              this.state.formDone ?\n              this.renderClock() :\n              this.renderForm()\n            }\n          </div>\n          <div className=\"col-md-6 p-3 bg-warning d-flex flex-column align-items-center\">\n            <h3 className=\"text-center\">\n              Fila\n            </h3>\n            <Field \n              handleQueueInput={this.handleQueueInput}\n              handleQueueSubmit={this.handleQueueSubmit}\n              queueInput={this.state.queueInput}\n              />\n            <Queue \n              queue={this.state.queue}\n              formDone={this.state.formDone}\n              handleDeleteQueueItem={this.handleDeleteQueueItem}\n            />\n          </div>\n        </div>   \n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}